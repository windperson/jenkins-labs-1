<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="E:\repo\jenkins-labs-1\Tests\Nop.Services.Tests\bin\Debug\Nop.Services.Tests.dll" total="143" errors="0" failures="0" not-run="3" inconclusive="0" ignored="3" skipped="0" invalid="0" date="2016-04-09" time="16:20:47">
  <environment nunit-version="2.6.4.14350" clr-version="2.0.50727.8670" os-version="Microsoft Windows NT 6.2.9200.0" platform="Win32NT" cwd="E:\repo\jenkins-labs-1\Tests\Nop.Services.Tests\bin\Debug" machine-name="VM-WIN10EN" user="user" user-domain="VM-WIN10EN" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="Assembly" name="E:\repo\jenkins-labs-1\Tests\Nop.Services.Tests\bin\Debug\Nop.Services.Tests.dll" executed="True" result="Success" success="True" time="9.526" asserts="0">
    <results>
      <test-suite type="Namespace" name="Nop" executed="True" result="Success" success="True" time="9.518" asserts="0">
        <results>
          <test-suite type="Namespace" name="Services" executed="True" result="Success" success="True" time="9.518" asserts="0">
            <results>
              <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="9.517" asserts="0">
                <results>
                  <test-suite type="Namespace" name="Catalog" executed="True" result="Success" success="True" time="1.202" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="PriceCalculationServiceTests" executed="True" result="Success" success="True" time="0.557" asserts="0">
                        <results>
                          <test-case name="Nop.Services.Tests.Catalog.PriceCalculationServiceTests.Can_get_final_product_price" executed="True" result="Success" success="True" time="0.424" asserts="2" />
                          <test-case name="Nop.Services.Tests.Catalog.PriceCalculationServiceTests.Can_get_final_product_price_with_additionalFee" executed="True" result="Success" success="True" time="0.004" asserts="1" />
                          <test-case name="Nop.Services.Tests.Catalog.PriceCalculationServiceTests.Can_get_final_product_price_with_discount" executed="True" result="Success" success="True" time="0.031" asserts="1" />
                          <test-case name="Nop.Services.Tests.Catalog.PriceCalculationServiceTests.Can_get_final_product_price_with_special_price" executed="True" result="Success" success="True" time="0.031" asserts="3" />
                          <test-case name="Nop.Services.Tests.Catalog.PriceCalculationServiceTests.Can_get_final_product_price_with_tier_prices" executed="True" result="Success" success="True" time="0.023" asserts="4" />
                          <test-case name="Nop.Services.Tests.Catalog.PriceCalculationServiceTests.Can_get_final_product_price_with_tier_prices_by_customerRole" executed="True" result="Success" success="True" time="0.004" asserts="5" />
                          <test-case name="Nop.Services.Tests.Catalog.PriceCalculationServiceTests.Can_get_shopping_cart_item_subTotal" executed="True" result="Success" success="True" time="0.009" asserts="1" />
                          <test-case name="Nop.Services.Tests.Catalog.PriceCalculationServiceTests.Can_get_shopping_cart_item_unitPrice" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="PriceFormatterTests" executed="True" result="Success" success="True" time="0.082" asserts="0">
                        <results>
                          <test-case name="Nop.Services.Tests.Catalog.PriceFormatterTests.Can_formatPrice_with_custom_currencyFormatting" executed="True" result="Success" success="True" time="0.075" asserts="1" />
                          <test-case name="Nop.Services.Tests.Catalog.PriceFormatterTests.Can_formatPrice_with_distinct_currencyDisplayLocale" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                          <test-case name="Nop.Services.Tests.Catalog.PriceFormatterTests.Can_formatPrice_with_showCurrencyCode" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                          <test-case name="Nop.Services.Tests.Catalog.PriceFormatterTests.Can_formatPrice_with_showTax" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ProductAttributeParserTests" executed="True" result="Success" success="True" time="0.515" asserts="0">
                        <results>
                          <test-case name="Nop.Services.Tests.Catalog.ProductAttributeParserTests.Can_add_and_parse_giftCardAttributes" executed="True" result="Success" success="True" time="0.378" asserts="5" />
                          <test-case name="Nop.Services.Tests.Catalog.ProductAttributeParserTests.Can_add_and_parse_productAttributes" executed="True" result="Success" success="True" time="0.021" asserts="8" />
                          <test-case name="Nop.Services.Tests.Catalog.ProductAttributeParserTests.Can_add_and_remove_productAttributes" executed="True" result="Success" success="True" time="0.006" asserts="6" />
                          <test-case name="Nop.Services.Tests.Catalog.ProductAttributeParserTests.Can_render_attributes_withoutPrices" executed="True" result="Success" success="True" time="0.101" asserts="1" />
                          <test-case name="Nop.Services.Tests.Catalog.ProductAttributeParserTests.Can_render_physical_gift_cart" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                          <test-case name="Nop.Services.Tests.Catalog.ProductAttributeParserTests.Can_render_virtual_gift_cart" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ProductExtensionTests" executed="True" result="Success" success="True" time="0.025" asserts="0">
                        <results>
                          <test-case name="Nop.Services.Tests.Catalog.ProductExtensionTests.Can_calculate_rental_periods_for_days" executed="True" result="Success" success="True" time="0.002" asserts="8" />
                          <test-case name="Nop.Services.Tests.Catalog.ProductExtensionTests.Can_calculate_rental_periods_for_months" executed="True" result="Success" success="True" time="0.002" asserts="24" />
                          <test-case name="Nop.Services.Tests.Catalog.ProductExtensionTests.Can_calculate_rental_periods_for_weeks" executed="True" result="Success" success="True" time="0.001" asserts="12" />
                          <test-case name="Nop.Services.Tests.Catalog.ProductExtensionTests.Can_calculate_rental_periods_for_years" executed="True" result="Success" success="True" time="0.001" asserts="7" />
                          <test-case name="Nop.Services.Tests.Catalog.ProductExtensionTests.Can_calculate_total_quantity_when_we_do_not_use_multiple_warehouses" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                          <test-case name="Nop.Services.Tests.Catalog.ProductExtensionTests.Can_calculate_total_quantity_when_we_do_use_multiple_warehouses_with_reserved" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                          <test-case name="Nop.Services.Tests.Catalog.ProductExtensionTests.Can_calculate_total_quantity_when_we_do_use_multiple_warehouses_with_warehouse_specified" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                          <test-case name="Nop.Services.Tests.Catalog.ProductExtensionTests.Can_calculate_total_quantity_when_we_do_use_multiple_warehouses_without_reserved" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                          <test-case name="Nop.Services.Tests.Catalog.ProductExtensionTests.Can_parse_allowed_quantities" executed="True" result="Success" success="True" time="0.001" asserts="5" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="TierPriceExtensionTests" executed="True" result="Success" success="True" time="0.011" asserts="0">
                        <results>
                          <test-case name="Nop.Services.Tests.Catalog.TierPriceExtensionTests.Can_remove_duplicatedQuantities" executed="True" result="Success" success="True" time="0.010" asserts="6" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Configuration" executed="True" result="Success" success="True" time="0.105" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="ConfigFileSettingServiceTests" executed="True" result="Success" success="True" time="0.098" asserts="0">
                        <results>
                          <test-case name="Nop.Services.Tests.Configuration.ConfigFileSettingServiceTests.Can_get_all_settings" executed="True" result="Success" success="True" time="0.052" asserts="2" />
                          <test-case name="Nop.Services.Tests.Configuration.ConfigFileSettingServiceTests.Can_get_setting_by_key" executed="True" result="Success" success="True" time="0.036" asserts="1" />
                          <test-case name="Nop.Services.Tests.Configuration.ConfigFileSettingServiceTests.Can_get_typed_setting_value_by_key" executed="True" result="Success" success="True" time="0.004" asserts="1" />
                          <test-case name="Nop.Services.Tests.Configuration.ConfigFileSettingServiceTests.Default_value_returned_if_setting_does_not_exist" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ConfigurationProviderTests" executed="True" result="Success" success="True" time="0.005" asserts="0">
                        <results>
                          <test-case name="Nop.Services.Tests.Configuration.ConfigurationProviderTests.Can_get_settings" executed="True" result="Success" success="True" time="0.004" asserts="5" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Customers" executed="True" result="Success" success="True" time="0.295" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="CustomerExtensionTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
                      <test-suite type="TestFixture" name="CustomerRegistrationServiceTests" executed="True" result="Success" success="True" time="0.293" asserts="0">
                        <results>
                          <test-case name="Nop.Services.Tests.Customers.CustomerRegistrationServiceTests.Can_validate_a_clear_password" executed="True" result="Success" success="True" time="0.279" asserts="1" />
                          <test-case name="Nop.Services.Tests.Customers.CustomerRegistrationServiceTests.Can_validate_a_hashed_password" executed="True" result="Success" success="True" time="0.003" asserts="1" />
                          <test-case name="Nop.Services.Tests.Customers.CustomerRegistrationServiceTests.Can_validate_an_encrypted_password" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                          <test-case name="Nop.Services.Tests.Customers.CustomerRegistrationServiceTests.Ensure_only_registered_customers_can_login" executed="True" result="Success" success="True" time="0.003" asserts="2" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Directory" executed="True" result="Success" success="True" time="3.161" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="CurrencyServiceTests" executed="True" result="Success" success="True" time="3.064" asserts="0">
                        <results>
                          <test-case name="Nop.Services.Tests.Directory.CurrencyServiceTests.Can_convert_currency_1" executed="True" result="Success" success="True" time="0.007" asserts="4" />
                          <test-case name="Nop.Services.Tests.Directory.CurrencyServiceTests.Can_convert_currency_2" executed="True" result="Success" success="True" time="0.005" asserts="5" />
                          <test-case name="Nop.Services.Tests.Directory.CurrencyServiceTests.Can_load_active_exchangeRateProvider" executed="True" result="Success" success="True" time="0.662" asserts="1" />
                          <test-case name="Nop.Services.Tests.Directory.CurrencyServiceTests.Can_load_exchangeRateProvider_by_systemKeyword" executed="True" result="Success" success="True" time="0.018" asserts="1" />
                          <test-case name="Nop.Services.Tests.Directory.CurrencyServiceTests.Can_load_exchangeRateProviders" executed="True" result="Success" success="True" time="0.002" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="MeasureServiceTests" executed="True" result="Success" success="True" time="0.093" asserts="0">
                        <results>
                          <test-case name="Nop.Services.Tests.Directory.MeasureServiceTests.Can_convert_dimension" executed="True" result="Success" success="True" time="0.087" asserts="5" />
                          <test-case name="Nop.Services.Tests.Directory.MeasureServiceTests.Can_convert_weight" executed="True" result="Success" success="True" time="0.004" asserts="5" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Discounts" executed="True" result="Success" success="True" time="0.227" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="DiscountExtensionsTests" executed="True" result="Success" success="True" time="0.006" asserts="0">
                        <results>
                          <test-case name="Nop.Services.Tests.Discounts.DiscountExtensionsTests.Can_calculate_discount_amount_fixed" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                          <test-case name="Nop.Services.Tests.Discounts.DiscountExtensionsTests.Can_calculate_discount_amount_percentage" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                          <test-case name="Nop.Services.Tests.Discounts.DiscountExtensionsTests.Maximum_discount_amount_is_used" executed="True" result="Success" success="True" time="0.001" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="DiscountServiceTests" executed="True" result="Success" success="True" time="0.220" asserts="0">
                        <results>
                          <test-case name="Nop.Services.Tests.Discounts.DiscountServiceTests.Can_get_all_discount" executed="True" result="Success" success="True" time="0.098" asserts="2" />
                          <test-case name="Nop.Services.Tests.Discounts.DiscountServiceTests.Can_load_discountRequirementRuleBySystemKeyword" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                          <test-case name="Nop.Services.Tests.Discounts.DiscountServiceTests.Can_load_discountRequirementRules" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                          <test-case name="Nop.Services.Tests.Discounts.DiscountServiceTests.Can_validate_discount_dateRange" executed="True" result="Success" success="True" time="0.084" asserts="2" />
                          <test-case name="Nop.Services.Tests.Discounts.DiscountServiceTests.Should_accept_valid_discount_code" executed="True" result="Success" success="True" time="0.024" asserts="1" />
                          <test-case name="Nop.Services.Tests.Discounts.DiscountServiceTests.Should_not_accept_wrong_discount_code" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="ExportImport" executed="True" result="Success" success="True" time="0.051" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="ExportManagerTests" executed="True" result="Success" success="True" time="0.050" asserts="0">
                        <results>
                          <test-case name="Nop.Services.Tests.ExportImport.ExportManagerTests.Can_export_orders_xlsx" executed="True" result="Success" success="True" time="0.050" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Helpers" executed="True" result="Success" success="True" time="0.108" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="DateTimeHelperTests" executed="True" result="Success" success="True" time="0.107" asserts="0">
                        <results>
                          <test-case name="Nop.Services.Tests.Helpers.DateTimeHelperTests.Can_convert_dateTime_to_userTime" executed="True" result="Success" success="True" time="0.019" asserts="4" />
                          <test-case name="Nop.Services.Tests.Helpers.DateTimeHelperTests.Can_convert_dateTime_to_utc_dateTime" executed="True" result="Success" success="True" time="0.001" asserts="3" />
                          <test-case name="Nop.Services.Tests.Helpers.DateTimeHelperTests.Can_find_systemTimeZone_by_id" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                          <test-case name="Nop.Services.Tests.Helpers.DateTimeHelperTests.Can_get_all_systemTimeZones" executed="True" result="Success" success="True" time="0.078" asserts="2" />
                          <test-case name="Nop.Services.Tests.Helpers.DateTimeHelperTests.Can_get_customer_timeZone_with_customTimeZones_disabled" executed="True" result="Success" success="True" time="0.002" asserts="2" />
                          <test-case name="Nop.Services.Tests.Helpers.DateTimeHelperTests.Can_get_customer_timeZone_with_customTimeZones_enabled" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Localization" executed="True" result="Success" success="True" time="0.039" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="LanguageServiceTests" executed="True" result="Success" success="True" time="0.039" asserts="0">
                        <results>
                          <test-case name="Nop.Services.Tests.Localization.LanguageServiceTests.Can_get_all_languages" executed="True" result="Success" success="True" time="0.038" asserts="2" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Logging" executed="True" result="Success" success="True" time="0.104" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="CustomerActivityServiceTests" executed="True" result="Success" success="True" time="0.103" asserts="0">
                        <results>
                          <test-case name="Nop.Services.Tests.Logging.CustomerActivityServiceTests.Can_Find_Activities" executed="True" result="Success" success="True" time="0.103" asserts="3" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Messages" executed="True" result="Success" success="True" time="0.237" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="NewsLetterSubscriptionServiceTests" executed="True" result="Success" success="True" time="0.130" asserts="0">
                        <results>
                          <test-case name="Nop.Services.Tests.Messages.NewsLetterSubscriptionServiceTests.VerifyActiveInsertTriggersSubscribeEvent" executed="True" result="Success" success="True" time="0.106" asserts="0" />
                          <test-case name="Nop.Services.Tests.Messages.NewsLetterSubscriptionServiceTests.VerifyDeleteTriggersUnsubscribeEvent" executed="True" result="Success" success="True" time="0.004" asserts="0" />
                          <test-case name="Nop.Services.Tests.Messages.NewsLetterSubscriptionServiceTests.VerifyEmailUpdateTriggersUnsubscribeAndSubscribeEvent" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[Ignoring until a solution to the IDbContext methods are found. -SRS]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Nop.Services.Tests.Messages.NewsLetterSubscriptionServiceTests.VerifyInactiveToActiveUpdateTriggersSubscribeEvent" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[Ignoring until a solution to the IDbContext methods are found. -SRS]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Nop.Services.Tests.Messages.NewsLetterSubscriptionServiceTests.VerifyInsertEventIsFired" executed="True" result="Success" success="True" time="0.004" asserts="0" />
                          <test-case name="Nop.Services.Tests.Messages.NewsLetterSubscriptionServiceTests.VerifyUpdateEventIsFired" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[Ignoring until a solution to the IDbContext methods are found. -SRS]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="TokenizerTests" executed="True" result="Success" success="True" time="0.103" asserts="0">
                        <results>
                          <test-case name="Nop.Services.Tests.Messages.TokenizerTests.Can_html_encode" executed="True" result="Success" success="True" time="0.098" asserts="1" />
                          <test-case name="Nop.Services.Tests.Messages.TokenizerTests.Can_replace_tokens_case_invariant" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Nop.Services.Tests.Messages.TokenizerTests.Can_replace_tokens_case_sensitive" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Nop.Services.Tests.Messages.TokenizerTests.Should_not_html_encode_if_token_doesnt_allow_it" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Orders" executed="True" result="Success" success="True" time="0.773" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="CheckoutAttributeExtensionsTests" executed="True" result="Success" success="True" time="0.003" asserts="0">
                        <results>
                          <test-case name="Nop.Services.Tests.Orders.CheckoutAttributeExtensionsTests.Can_remove_shippable_attributes" executed="True" result="Success" success="True" time="0.002" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="CheckoutAttributeParserAndFormatterTests" executed="True" result="Success" success="True" time="0.106" asserts="0">
                        <results>
                          <test-case name="Nop.Services.Tests.Orders.CheckoutAttributeParserAndFormatterTests.Can_add_and_parse_checkoutAttributes" executed="True" result="Success" success="True" time="0.094" asserts="8" />
                          <test-case name="Nop.Services.Tests.Orders.CheckoutAttributeParserAndFormatterTests.Can_add_render_attributes_withoutPrices" executed="True" result="Success" success="True" time="0.010" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="OrderProcessingServiceTests" executed="True" result="Success" success="True" time="0.446" asserts="0">
                        <results>
                          <test-case name="Nop.Services.Tests.Orders.OrderProcessingServiceTests.Ensure_order_can_only_be_cancelled_when_orderStatus_is_not_cancelled_yet" executed="True" result="Success" success="True" time="0.373" asserts="120" />
                          <test-case name="Nop.Services.Tests.Orders.OrderProcessingServiceTests.Ensure_order_can_only_be_captured_when_orderStatus_is_not_cancelled_or_pending_and_paymentstatus_is_authorized_and_paymentModule_supports_capture" executed="True" result="Success" success="True" time="0.007" asserts="240" />
                          <test-case name="Nop.Services.Tests.Orders.OrderProcessingServiceTests.Ensure_order_can_only_be_marked_as_authorized_when_orderStatus_is_not_cancelled_and_paymentStatus_is_pending" executed="True" result="Success" success="True" time="0.002" asserts="120" />
                          <test-case name="Nop.Services.Tests.Orders.OrderProcessingServiceTests.Ensure_order_can_only_be_partially_refunded_offline_when_paymentstatus_is_paid_or_partiallyRefunded" executed="True" result="Success" success="True" time="0.003" asserts="120" />
                          <test-case name="Nop.Services.Tests.Orders.OrderProcessingServiceTests.Ensure_order_can_only_be_partially_refunded_when_paymentstatus_is_paid_or_partiallyRefunded_and_paymentModule_supports_partialRefund" executed="True" result="Success" success="True" time="0.006" asserts="240" />
                          <test-case name="Nop.Services.Tests.Orders.OrderProcessingServiceTests.Ensure_order_can_only_be_refunded_offline_when_paymentstatus_is_paid" executed="True" result="Success" success="True" time="0.002" asserts="120" />
                          <test-case name="Nop.Services.Tests.Orders.OrderProcessingServiceTests.Ensure_order_can_only_be_refunded_when_paymentstatus_is_paid_and_paymentModule_supports_refund" executed="True" result="Success" success="True" time="0.004" asserts="240" />
                          <test-case name="Nop.Services.Tests.Orders.OrderProcessingServiceTests.Ensure_order_can_only_be_voided_offline_when_paymentstatus_is_authorized" executed="True" result="Success" success="True" time="0.002" asserts="120" />
                          <test-case name="Nop.Services.Tests.Orders.OrderProcessingServiceTests.Ensure_order_can_only_be_voided_when_paymentstatus_is_authorized_and_paymentModule_supports_void" executed="True" result="Success" success="True" time="0.005" asserts="240" />
                          <test-case name="Nop.Services.Tests.Orders.OrderProcessingServiceTests.Ensure_order_cannot_be_marked_as_paid_when_orderStatus_is_cancelled_or_paymentStatus_is_paid_or_refunded_or_voided" executed="True" result="Success" success="True" time="0.002" asserts="120" />
                          <test-case name="Nop.Services.Tests.Orders.OrderProcessingServiceTests.Ensure_order_cannot_be_partially_refunded_offline_when_amountToRefund_is_greater_than_amount_that_can_be_refunded" executed="True" result="Success" success="True" time="0.002" asserts="120" />
                          <test-case name="Nop.Services.Tests.Orders.OrderProcessingServiceTests.Ensure_order_cannot_be_partially_refunded_when_amountToRefund_is_greater_than_amount_that_can_be_refunded" executed="True" result="Success" success="True" time="0.003" asserts="120" />
                          <test-case name="Nop.Services.Tests.Orders.OrderProcessingServiceTests.Ensure_order_cannot_be_refunded_offline_when_orderTotal_is_zero" executed="True" result="Success" success="True" time="0.003" asserts="120" />
                          <test-case name="Nop.Services.Tests.Orders.OrderProcessingServiceTests.Ensure_order_cannot_be_refunded_when_orderTotal_is_zero" executed="True" result="Success" success="True" time="0.002" asserts="120" />
                          <test-case name="Nop.Services.Tests.Orders.OrderProcessingServiceTests.Ensure_order_cannot_be_voided_offline_when_orderTotal_is_zero" executed="True" result="Success" success="True" time="0.002" asserts="120" />
                          <test-case name="Nop.Services.Tests.Orders.OrderProcessingServiceTests.Ensure_order_cannot_be_voided_when_orderTotal_is_zero" executed="True" result="Success" success="True" time="0.002" asserts="120" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="OrderTotalCalculationServiceTests" executed="True" result="Success" success="True" time="0.211" asserts="0">
                        <results>
                          <test-case name="Nop.Services.Tests.Orders.OrderTotalCalculationServiceTests.Can_check_minimum_reward_points_to_use_requirement" executed="True" result="Success" success="True" time="0.006" asserts="7" />
                          <test-case name="Nop.Services.Tests.Orders.OrderTotalCalculationServiceTests.Can_convert_amount_to_reward_points" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                          <test-case name="Nop.Services.Tests.Orders.OrderTotalCalculationServiceTests.Can_convert_reward_points_to_amount" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                          <test-case name="Nop.Services.Tests.Orders.OrderTotalCalculationServiceTests.Can_get_shipping_total_discount_excluding_tax" executed="True" result="Success" success="True" time="0.039" asserts="5" />
                          <test-case name="Nop.Services.Tests.Orders.OrderTotalCalculationServiceTests.Can_get_shipping_total_discount_including_tax" executed="True" result="Success" success="True" time="0.005" asserts="5" />
                          <test-case name="Nop.Services.Tests.Orders.OrderTotalCalculationServiceTests.Can_get_shipping_total_with_fixed_shipping_rate_excluding_tax" executed="True" result="Success" success="True" time="0.002" asserts="4" />
                          <test-case name="Nop.Services.Tests.Orders.OrderTotalCalculationServiceTests.Can_get_shipping_total_with_fixed_shipping_rate_including_tax" executed="True" result="Success" success="True" time="0.003" asserts="4" />
                          <test-case name="Nop.Services.Tests.Orders.OrderTotalCalculationServiceTests.Can_get_shopping_cart_subTotal_discount_excluding_tax" executed="True" result="Success" success="True" time="0.058" asserts="8" />
                          <test-case name="Nop.Services.Tests.Orders.OrderTotalCalculationServiceTests.Can_get_shopping_cart_subTotal_discount_including_tax" executed="True" result="Success" success="True" time="0.004" asserts="8" />
                          <test-case name="Nop.Services.Tests.Orders.OrderTotalCalculationServiceTests.Can_get_shopping_cart_subTotal_excluding_tax" executed="True" result="Success" success="True" time="0.003" asserts="7" />
                          <test-case name="Nop.Services.Tests.Orders.OrderTotalCalculationServiceTests.Can_get_shopping_cart_subTotal_including_tax" executed="True" result="Success" success="True" time="0.005" asserts="7" />
                          <test-case name="Nop.Services.Tests.Orders.OrderTotalCalculationServiceTests.Can_get_shopping_cart_total_discount" executed="True" result="Success" success="True" time="0.020" asserts="4" />
                          <test-case name="Nop.Services.Tests.Orders.OrderTotalCalculationServiceTests.Can_get_shopping_cart_total_with_shipping_required" executed="True" result="Success" success="True" time="0.005" asserts="1" />
                          <test-case name="Nop.Services.Tests.Orders.OrderTotalCalculationServiceTests.Can_get_shopping_cart_total_without_shipping_required" executed="True" result="Success" success="True" time="0.005" asserts="1" />
                          <test-case name="Nop.Services.Tests.Orders.OrderTotalCalculationServiceTests.Can_get_shoppingCartItem_additional_shippingCharge" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                          <test-case name="Nop.Services.Tests.Orders.OrderTotalCalculationServiceTests.Can_get_tax_total" executed="True" result="Success" success="True" time="0.006" asserts="20" />
                          <test-case name="Nop.Services.Tests.Orders.OrderTotalCalculationServiceTests.Shipping_should_be_free_when_all_shoppingCartItems_are_marked_as_freeShipping" executed="True" result="Success" success="True" time="0.004" asserts="1" />
                          <test-case name="Nop.Services.Tests.Orders.OrderTotalCalculationServiceTests.Shipping_should_be_free_when_customer_is_in_role_with_free_shipping" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                          <test-case name="Nop.Services.Tests.Orders.OrderTotalCalculationServiceTests.Shipping_should_not_be_free_when_some_of_shoppingCartItems_are_not_marked_as_freeShipping" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Payments" executed="True" result="Success" success="True" time="0.231" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="PaymentExtensionTests" executed="True" result="Success" success="True" time="0.219" asserts="0">
                        <results>
                          <test-case name="Nop.Services.Tests.Payments.PaymentExtensionTests.Can_deserialize_empty_string" executed="True" result="Success" success="True" time="0.002" asserts="2" />
                          <test-case name="Nop.Services.Tests.Payments.PaymentExtensionTests.Can_deserialize_null_string" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                          <test-case name="Nop.Services.Tests.Payments.PaymentExtensionTests.Can_serialize_and_deserialize_CustomValues" executed="True" result="Success" success="True" time="0.210" asserts="10" />
                          <test-case name="Nop.Services.Tests.Payments.PaymentExtensionTests.Can_serialize_and_deserialize_empty_CustomValues" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="PaymentServiceTests" executed="True" result="Success" success="True" time="0.009" asserts="0">
                        <results>
                          <test-case name="Nop.Services.Tests.Payments.PaymentServiceTests.Can_get_masked_credit_card_number" executed="True" result="Success" success="True" time="0.001" asserts="3" />
                          <test-case name="Nop.Services.Tests.Payments.PaymentServiceTests.Can_load_active_paymentMethods" executed="True" result="Success" success="True" time="0.002" asserts="2" />
                          <test-case name="Nop.Services.Tests.Payments.PaymentServiceTests.Can_load_paymentMethod_by_systemKeyword" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                          <test-case name="Nop.Services.Tests.Payments.PaymentServiceTests.Can_load_paymentMethods" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Security" executed="True" result="Success" success="True" time="0.007" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="EncryptionServiceTests" executed="True" result="Success" success="True" time="0.006" asserts="0">
                        <results>
                          <test-case name="Nop.Services.Tests.Security.EncryptionServiceTests.Can_encrypt_and_decrypt" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                          <test-case name="Nop.Services.Tests.Security.EncryptionServiceTests.Can_hash" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Seo" executed="True" result="Success" success="True" time="0.046" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="SeoExtensionsTests" executed="True" result="Success" success="True" time="0.044" asserts="0">
                        <results>
                          <test-case name="Nop.Services.Tests.Seo.SeoExtensionsTests.Can_allow_unicode_chars" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                          <test-case name="Nop.Services.Tests.Seo.SeoExtensionsTests.Can_convert_non_western_chars" executed="True" result="Success" success="True" time="0.034" asserts="2" />
                          <test-case name="Nop.Services.Tests.Seo.SeoExtensionsTests.Should_allow_all_latin_chars" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Nop.Services.Tests.Seo.SeoExtensionsTests.Should_remove_illegal_chars" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="Nop.Services.Tests.Seo.SeoExtensionsTests.Should_replace_space_with_dash" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                          <test-case name="Nop.Services.Tests.Seo.SeoExtensionsTests.Should_return_lowercase" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Shipping" executed="True" result="Success" success="True" time="0.042" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="CalculateDimensionsTests" executed="True" result="Success" success="True" time="0.025" asserts="0">
                        <results>
                          <test-case name="Nop.Services.Tests.Shipping.CalculateDimensionsTests.can_calculate_with_cubic_item_and_multiple_qty" executed="True" result="Success" success="True" time="0.006" asserts="3" />
                          <test-case name="Nop.Services.Tests.Shipping.CalculateDimensionsTests.can_calculate_with_multiple_items_1" executed="True" result="Success" success="True" time="0.001" asserts="3" />
                          <test-case name="Nop.Services.Tests.Shipping.CalculateDimensionsTests.can_calculate_with_multiple_items_2" executed="True" result="Success" success="True" time="0.002" asserts="3" />
                          <test-case name="Nop.Services.Tests.Shipping.CalculateDimensionsTests.can_calculate_with_single_item_and_qty_1_should_ignore_cubic_method" executed="True" result="Success" success="True" time="0.001" asserts="3" />
                          <test-case name="Nop.Services.Tests.Shipping.CalculateDimensionsTests.can_calculate_with_single_item_and_qty_2" executed="True" result="Success" success="True" time="0.001" asserts="3" />
                          <test-case name="Nop.Services.Tests.Shipping.CalculateDimensionsTests.should_return_zero_with_all_zero_dimensions" executed="True" result="Success" success="True" time="0.001" asserts="6" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ShippingServiceTests" executed="True" result="Success" success="True" time="0.014" asserts="0">
                        <results>
                          <test-case name="Nop.Services.Tests.Shipping.ShippingServiceTests.Can_get_shoppingCart_totalWeight_without_attributes" executed="True" result="Success" success="True" time="0.004" asserts="1" />
                          <test-case name="Nop.Services.Tests.Shipping.ShippingServiceTests.Can_load_active_shippingRateComputationMethods" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                          <test-case name="Nop.Services.Tests.Shipping.ShippingServiceTests.Can_load_shippingRateComputationMethod_by_systemKeyword" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                          <test-case name="Nop.Services.Tests.Shipping.ShippingServiceTests.Can_load_shippingRateComputationMethods" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Tax" executed="True" result="Success" success="True" time="2.854" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="TaxServiceTests" executed="True" result="Success" success="True" time="2.853" asserts="0">
                        <results>
                          <test-case name="Nop.Services.Tests.Tax.TaxServiceTests.Can_check_taxExempt_customer" executed="True" result="Success" success="True" time="0.004" asserts="2" />
                          <test-case name="Nop.Services.Tests.Tax.TaxServiceTests.Can_check_taxExempt_customer_in_taxExemptCustomerRole" executed="True" result="Success" success="True" time="0.001" asserts="4" />
                          <test-case name="Nop.Services.Tests.Tax.TaxServiceTests.Can_check_taxExempt_product" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                          <test-case name="Nop.Services.Tests.Tax.TaxServiceTests.Can_do_VAT_check" executed="True" result="Success" success="True" time="2.778" asserts="4" />
                          <test-case name="Nop.Services.Tests.Tax.TaxServiceTests.Can_get_productPrice_priceIncludesTax_includingTax_non_taxable" executed="True" result="Success" success="True" time="0.023" asserts="4" />
                          <test-case name="Nop.Services.Tests.Tax.TaxServiceTests.Can_get_productPrice_priceIncludesTax_includingTax_taxable" executed="True" result="Success" success="True" time="0.003" asserts="4" />
                          <test-case name="Nop.Services.Tests.Tax.TaxServiceTests.Can_load_active_taxProvider" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                          <test-case name="Nop.Services.Tests.Tax.TaxServiceTests.Can_load_taxProvider_by_systemKeyword" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                          <test-case name="Nop.Services.Tests.Tax.TaxServiceTests.Can_load_taxProviders" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                          <test-case name="Nop.Services.Tests.Tax.TaxServiceTests.Should_assume_valid_VAT_number_if_EuVatAssumeValid_setting_is_true" executed="True" result="Success" success="True" time="0.002" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>